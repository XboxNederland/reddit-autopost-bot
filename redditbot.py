import datetime
import json
import logging
import re
import subprocess

from bs4 import BeautifulSoup
import praw
import requests

current_date = datetime.date.today() - datetime.timedelta(days=1)

def autotldr_post(post):
    author = post.author.name
    return author == 'autotldr'


def today(message):
    message_creation = datetime.date.fromtimestamp(message.created)
    logging.debug('{0} >= {1}'.format(message_creation, current_date))
    return message_creation >= current_date


def main():
    r = praw.Reddit("u/cruyff8's summary")
    r.login('cruyff8', 'Ug1727a8uvWTw5J8VFGigh', disable_warning=True)
    subreddit = r.get_subreddit('autotldr')
    subreddit2 = r.get_subreddit('unitsd8u')
    messages_generator = subreddit.get_new()
    messages = filter(autotldr_post, messages_generator)
    messages = filter(today, messages)
    logging.debug(len(messages));exit
    for message in messages:
        html = message.selftext_html
        soup = BeautifulSoup(html, 'lxml')
        link = soup.find('a')['href']
    
        logging.debug('Link is {0}'.format(link))
        params = {'url': link}
        try:
            summary_result = requests.get('http://units.d8u.us/summary', params=params).json()
            logging.debug('From units, keys are: {0}'.format(summary_result.keys()))
        except BaseException, e:
            continue

        try:
            summary = summary_result['summary'].encode('utf-8', errors='replace')
            logging.debug(type(summary))
        except KeyError:
            continue

        structure = "Summary generated by [cruyff8's autosummarizer](http://units.d8u.us/summary?url={0}) of {0}:\n\n> {1}".format(link, summary)
        try:
            message2 = subreddit2.submit(message.title, structure, send_replies=False)
        except:
            pass


if __name__ == '__main__':
    numeric_level = logging.FATAL
    logging.basicConfig(level=numeric_level)
    main()
